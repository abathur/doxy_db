{
  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable";
    flake-utils.url = "github:numtide/flake-utils";
    flake-compat = {
      url = "github:edolstra/flake-compat";
      flake = false;
    };
    doxygen-upstream = {
      url = "github:doxygen/doxygen";
      flake = false;
    };
  };

  description = "Doxy_db composes sqlite3 databases generated by Doxygen into multi-section manuals that have a simple query API.";

  outputs = { self, nixpkgs, flake-utils, flake-compat, doxygen-upstream }:
    {
      overlays.default = final: prev: {
        doxy_db = prev.callPackage ./doxy_db.nix { };
        doxygen_latest = prev.doxygen.overrideAttrs (attrs: rec {
          src = doxygen-upstream;
        });
      };
      # shell = ./shell.nix;
    } // flake-utils.lib.eachDefaultSystem (system:
      let
        pkgs = import nixpkgs {
          inherit system;
          overlays = [
            self.overlays.default
          ];
        };
      in
        {
          packages = {
            inherit (pkgs) doxy_db;
            default = pkgs.doxy_db;
          };
          checks = {
            inherit (pkgs) doxy_db;
            doxy_db_latest = pkgs.doxy_db.override { doxygen = pkgs.doxygen_latest; };
          };

          devShells = {
            default = pkgs.mkShell {
              buildInputs = [ pkgs.doxy_db pkgs.bashInteractive ];
              shellHook = ''
              '';
            };
            # update = pkgs.callPackage ./update.nix { };
          };
        }
    );
}
